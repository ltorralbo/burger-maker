{"ast":null,"code":"import _objectSpread from \"/Users/luistorralbo/Desktop/burger-maker/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/luistorralbo/Desktop/burger-maker/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport whitErrorHandler from '../../hoc/whitErrorHandler/whitErrorHandler';\nconst INGREDIENT_PRICES = {\n  salad: 200,\n  cheese: 1000,\n  meat: 1500,\n  bacon: 1000\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4000,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceReduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceReduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelhandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinued = () => {\n      //alert('Continuar');\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'Luis Fernando',\n          address: {\n            street: 'Freedom',\n            zipCode: '24653',\n            country: 'Chile'\n          },\n          email: 'test@mail.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: true,\n          purchasing: false\n        });\n      }).catch(error => {\n        this.setState({\n          loading: true,\n          purchasing: false\n        });\n      });\n    };\n  }\n\n  componentWillMount() {\n    axios.get('https://burger-maker-92328.firebaseio.com/ingredients').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      purchaseCancelled: this.purchaseCancelhandler,\n      purchaseContinued: this.purchaseContinued,\n      precio: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    });\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      });\n    }\n\n    let burger = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    });\n\n    if (this.state.ingredients) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandler,\n        price: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelhandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default whitErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/Users/luistorralbo/Desktop/burger-maker/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","whitErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","updatePurchaseState","sum","Object","keys","map","igKey","reduce","el","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","priceReduction","purchaseHandler","purchaseCancelhandler","purchaseContinued","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","response","catch","error","componentWillMount","get","data","render","disabledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport whitErrorHandler from '../../hoc/whitErrorHandler/whitErrorHandler';\n\nconst INGREDIENT_PRICES = {\n  salad: 200,\n  cheese: 1000,\n  meat: 1500,\n  bacon: 1000\n};\n\nclass BurgerBuilder extends Component {\n  state = {\n    ingredients: null,\n    totalPrice: 4000,\n    purchasable: false,\n    purchasing: false,\n    loading: false\n  };\n\n  componentWillMount() {\n    axios\n      .get('https://burger-maker-92328.firebaseio.com/ingredients')\n      .then(response => {\n        this.setState({ ingredients: response.data });\n      });\n  }\n\n  updatePurchaseState = ingredients => {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n\n    this.setState({ purchasable: sum > 0 });\n  };\n\n  addIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };\n\n  removeIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceReduction = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceReduction;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };\n\n  purchaseHandler = () => {\n    this.setState({ purchasing: true });\n  };\n\n  purchaseCancelhandler = () => {\n    this.setState({ purchasing: false });\n  };\n\n  purchaseContinued = () => {\n    //alert('Continuar');\n    this.setState({ loading: true });\n    const order = {\n      ingredients: this.state.ingredients,\n      price: this.state.totalPrice,\n      customer: {\n        name: 'Luis Fernando',\n        address: {\n          street: 'Freedom',\n          zipCode: '24653',\n          country: 'Chile'\n        },\n        email: 'test@mail.com'\n      },\n      deliveryMethod: 'fastest'\n    };\n    axios\n      .post('/orders.json', order)\n      .then(response => {\n        this.setState({ loading: true, purchasing: false });\n      })\n      .catch(error => {\n        this.setState({ loading: true, purchasing: false });\n      });\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = (\n      <OrderSummary\n        ingredients={this.state.ingredients}\n        purchaseCancelled={this.purchaseCancelhandler}\n        purchaseContinued={this.purchaseContinued}\n        precio={this.state.totalPrice}\n      />\n    );\n\n    if (this.state.loading) {\n      orderSummary = <Spinner />;\n    }\n    let burger = <Spinner />;\n\n    if (this.state.ingredients) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.state.ingredients} />\n          <BuildControls\n            ingredientAdded={this.addIngredientHandler}\n            ingredientRemoved={this.removeIngredientHandler}\n            disabled={disabledInfo}\n            purchasable={this.state.purchasable}\n            ordered={this.purchaseHandler}\n            price={this.state.totalPrice}\n          />\n        </Aux>\n      );\n    }\n\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelhandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\nexport default whitErrorHandler(BurgerBuilder, axios);\n"]},"metadata":{},"sourceType":"module"}