{"ast":null,"code":"import _objectSpread from \"/Users/luistorralbo/Desktop/burger-maker/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/luistorralbo/Desktop/burger-maker/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nconst INGREDIENT_PRICES = {\n  salad: 200,\n  cheese: 1000,\n  meat: 1500,\n  bacon: 1000\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 1,\n        bacon: 1,\n        cheese: 1,\n        meat: 1\n      },\n      totalPrice: 4000,\n      purchasable: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sun = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceReduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceReduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState();\n    };\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      purchaseable: this.state.purchasable,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/luistorralbo/Desktop/burger-maker/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","updatePurchaseState","sun","Object","keys","map","igKey","reduce","sum","el","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","priceReduction","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\n\nconst INGREDIENT_PRICES = {\n  salad: 200,\n  cheese: 1000,\n  meat: 1500,\n  bacon: 1000\n};\n\nclass BurgerBuilder extends Component {\n  state = {\n    ingredients: {\n      salad: 1,\n      bacon: 1,\n      cheese: 1,\n      meat: 1\n    },\n    totalPrice: 4000,\n    purchasable: false\n  };\n\n  updatePurchaseState = ingredients => {\n    const sun = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n\n    this.setState({ purchasable: sum > 0 });\n  };\n\n  addIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n  };\n\n  removeIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceReduction = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceReduction;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState();\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    return (\n      <Aux>\n        <Burger ingredients={this.state.ingredients} />\n        <BuildControls\n          ingredientAdded={this.addIngredientHandler}\n          ingredientRemoved={this.removeIngredientHandler}\n          disabled={disabledInfo}\n          purchaseable={this.state.purchasable}\n          price={this.state.totalPrice}\n        />\n      </Aux>\n    );\n  }\n}\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}