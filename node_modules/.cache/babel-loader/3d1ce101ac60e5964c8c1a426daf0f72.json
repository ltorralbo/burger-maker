{"ast":null,"code":"var _jsxFileName = \"/Users/luistorralbo/Desktop/burger-maker/src/components/UI/Input/Input.js\";\nimport React from 'react';\nimport classes from './Input.css';\n\nconst Input = props => {\n  let inputElement = null;\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: \"InputElement\"\n      }, props.elementConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }));\n      break;\n\n    case 'textarea':\n      inputElement = React.createElement(\"textarea\", Object.assign({\n        className: \"InputElement\"\n      }, props.elementConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n\n    case 'select':\n      inputElement = React.createElement(\"select\", {\n        className: \"InputElement\",\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, props.elementConfig.options.map(option => React.createElement(\"option\", {\n        key: option.value,\n        value: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, option.displayValue)));\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: \"InputElement\"\n      }, props.elementConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"Label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, props.label), inputElement);\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/luistorralbo/Desktop/burger-maker/src/components/UI/Input/Input.js"],"names":["React","classes","Input","props","inputElement","elementType","elementConfig","value","options","map","option","displayValue","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,MAAIC,YAAY,GAAG,IAAnB;;AAEA,UAAQD,KAAK,CAACE,WAAd;AACE,SAAK,OAAL;AACED,MAAAA,YAAY,GACV;AACE,QAAA,SAAS,EAAC;AADZ,SAEMD,KAAK,CAACG,aAFZ;AAGE,QAAA,KAAK,EAAEH,KAAK,CAACI,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAOA;;AACF,SAAK,UAAL;AACEH,MAAAA,YAAY,GACV;AACE,QAAA,SAAS,EAAC;AADZ,SAEMD,KAAK,CAACG,aAFZ;AAGE,QAAA,KAAK,EAAEH,KAAK,CAACI,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;;AAOF,SAAK,QAAL;AACEH,MAAAA,YAAY,GACV;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,KAAK,EAAED,KAAK,CAACI,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,KAAK,CAACG,aAAN,CAAoBE,OAApB,CAA4BC,GAA5B,CAAgCC,MAAM,IACrC;AAAQ,QAAA,GAAG,EAAEA,MAAM,CAACH,KAApB;AAA2B,QAAA,KAAK,EAAEG,MAAM,CAACH,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,MAAM,CAACC,YADV,CADD,CADH,CADF;;AASF;AACEP,MAAAA,YAAY,GACV;AACE,QAAA,SAAS,EAAC;AADZ,SAEMD,KAAK,CAACG,aAFZ;AAGE,QAAA,KAAK,EAAEH,KAAK,CAACI,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AA7BJ;;AAsCA,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BJ,KAAK,CAACS,KAAhC,CADF,EAEGR,YAFH,CADF;AAMD,CA/CD;;AAgDA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport classes from './Input.css';\n\nconst Input = props => {\n  let inputElement = null;\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = (\n        <input\n          className=\"InputElement\"\n          {...props.elementConfig}\n          value={props.value}\n        />\n      );\n      break;\n    case 'textarea':\n      inputElement = (\n        <textarea\n          className=\"InputElement\"\n          {...props.elementConfig}\n          value={props.value}\n        />\n      );\n    case 'select':\n      inputElement = (\n        <select className=\"InputElement\" value={props.value}>\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n    default:\n      inputElement = (\n        <input\n          className=\"InputElement\"\n          {...props.elementConfig}\n          value={props.value}\n        />\n      );\n  }\n\n  return (\n    <div className=\"Input\">\n      <label className=\"Label\">{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}