{"ast":null,"code":"import _objectSpread from \"/Users/luistorralbo/Desktop/burger-maker/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/luistorralbo/Desktop/burger-maker/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport whitErrorHandler from '../../hoc/whitErrorHandler/whitErrorHandler';\nimport * as actionTypes from '../../store/actions';\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      totalPrice: 4000,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceReduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceReduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelhandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinued = () => {\n      //alert('Continuar');\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + this.state.totalPrice);\n      const queryString = queryParams.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n  }\n\n  componentWillMount() {\n    /* axios\n      .get('https://burger-maker-92328.firebaseio.com/ingredients.json')\n      .then(response => {\n        this.setState({ ingredients: response.data });\n      })\n      .catch(error => {\n        this.setState({ error: true });\n      }); */\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.props.ings);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"No se pueden cargar los ingredientes...\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    });\n\n    if (this.props.ings) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.props.onIngredientAdded,\n        ingredientRemoved: this.props.onIngredientRemoved,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandler,\n        price: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.props.ings,\n        purchaseCancelled: this.purchaseCancelhandler,\n        purchaseContinued: this.purchaseContinued,\n        precio: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelhandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch({\n      type: actionTypes.ADD_INGREDIENT,\n      ingredientName: ingName\n    }),\n    onIngredientRemoved: ingName => dispatch({\n      type: actionTypes.REMOVE_INGREDIENT,\n      ingredientName: ingName\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(whitErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/luistorralbo/Desktop/burger-maker/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","whitErrorHandler","actionTypes","BurgerBuilder","state","totalPrice","purchasable","purchasing","loading","error","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","INGREDIENT_PRICES","oldPrice","newPrice","removeIngredientHandler","priceReduction","purchaseHandler","purchaseCancelhandler","purchaseContinued","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","componentWillMount","render","disabledInfo","ings","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","mapStateToProps","mapDispatchToProps","dispatch","ingName","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport whitErrorHandler from '../../hoc/whitErrorHandler/whitErrorHandler';\nimport * as actionTypes from '../../store/actions';\n\nclass BurgerBuilder extends Component {\n  state = {\n    totalPrice: 4000,\n    purchasable: false,\n    purchasing: false,\n    loading: false,\n    error: false\n  };\n\n  componentWillMount() {\n    /* axios\n      .get('https://burger-maker-92328.firebaseio.com/ingredients.json')\n      .then(response => {\n        this.setState({ ingredients: response.data });\n      })\n      .catch(error => {\n        this.setState({ error: true });\n      }); */\n  }\n\n  updatePurchaseState = ingredients => {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n\n    this.setState({ purchasable: sum > 0 });\n  };\n\n  addIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };\n\n  removeIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceReduction = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceReduction;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };\n\n  purchaseHandler = () => {\n    this.setState({ purchasing: true });\n  };\n\n  purchaseCancelhandler = () => {\n    this.setState({ purchasing: false });\n  };\n\n  purchaseContinued = () => {\n    //alert('Continuar');\n\n    const queryParams = [];\n    for (let i in this.state.ingredients) {\n      queryParams.push(\n        encodeURIComponent(i) +\n          '=' +\n          encodeURIComponent(this.state.ingredients[i])\n      );\n    }\n    queryParams.push('price=' + this.state.totalPrice);\n    const queryString = queryParams.join('&');\n    this.props.history.push({\n      pathname: '/checkout',\n      search: '?' + queryString\n    });\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.props.ings\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n\n    let burger = this.state.error ? (\n      <p>No se pueden cargar los ingredientes...</p>\n    ) : (\n      <Spinner />\n    );\n\n    if (this.props.ings) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ings} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            purchasable={this.state.purchasable}\n            ordered={this.purchaseHandler}\n            price={this.state.totalPrice}\n          />\n        </Aux>\n      );\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ings}\n          purchaseCancelled={this.purchaseCancelhandler}\n          purchaseContinued={this.purchaseContinued}\n          precio={this.state.totalPrice}\n        />\n      );\n    }\n    if (this.state.loading) {\n      orderSummary = <Spinner />;\n    }\n\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelhandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName =>\n      dispatch({ type: actionTypes.ADD_INGREDIENT, ingredientName: ingName }),\n    onIngredientRemoved: ingName =>\n      dispatch({ type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(whitErrorHandler(BurgerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}