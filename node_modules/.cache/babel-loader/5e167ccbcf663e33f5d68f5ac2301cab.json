{"ast":null,"code":"import _objectSpread from \"/Users/luistorralbo/Desktop/burger-maker/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as actionTypes from './actions';\nconst initialState = {\n  ingredients: {\n    salad: 0,\n    bacon: 0,\n    meat: 0,\n    cheese: 0\n  },\n  totalPrice: 4000\n};\nconst INGREDIENT_PRICES = {\n  salad: 200,\n  cheese: 1000,\n  meat: 1500,\n  bacon: 1000\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, {\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n          totalPrice: state.totalPrice + INGREDIENT_PRICES[ingredientName]\n        })\n      });\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, {\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/luistorralbo/Desktop/burger-maker/src/store/reducer.js"],"names":["actionTypes","initialState","ingredients","salad","bacon","meat","cheese","totalPrice","INGREDIENT_PRICES","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAE,CADI;AAEXC,IAAAA,KAAK,EAAE,CAFI;AAGXC,IAAAA,IAAI,EAAE,CAHK;AAIXC,IAAAA,MAAM,EAAE;AAJG,GADM;AAOnBC,EAAAA,UAAU,EAAE;AAPO,CAArB;AAUA,MAAMC,iBAAiB,GAAG;AACxBL,EAAAA,KAAK,EAAE,GADiB;AAExBG,EAAAA,MAAM,EAAE,IAFgB;AAGxBD,EAAAA,IAAI,EAAE,IAHkB;AAIxBD,EAAAA,KAAK,EAAE;AAJiB,CAA1B;;AAOA,MAAMK,OAAO,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,WAAW,CAACa,cAAjB;AACE,+BACKH,KADL;AAEER,QAAAA,WAAW,oBACNQ,KAAK,CAACR,WADA;AAET,WAACS,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACR,WAAN,CAAkBS,MAAM,CAACG,cAAzB,IAA2C,CAF3D;AAGTP,UAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBC,iBAAiB,CAACM,cAAD;AAHvC;AAFb;;AAQF,SAAKd,WAAW,CAACe,iBAAjB;AACE,+BACKL,KADL;AAEER,QAAAA,WAAW,oBACNQ,KAAK,CAACR,WADA;AAET,WAACS,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACR,WAAN,CAAkBS,MAAM,CAACG,cAAzB,IAA2C;AAF3D;AAFb;;AAOF;AACE,aAAOJ,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from './actions';\n\nconst initialState = {\n  ingredients: {\n    salad: 0,\n    bacon: 0,\n    meat: 0,\n    cheese: 0\n  },\n  totalPrice: 4000\n};\n\nconst INGREDIENT_PRICES = {\n  salad: 200,\n  cheese: 1000,\n  meat: 1500,\n  bacon: 1000\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n          totalPrice: state.totalPrice + INGREDIENT_PRICES[ingredientName]\n        }\n      };\n    case actionTypes.REMOVE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}