{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport const purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\nexport const purchaseBurger = orderData => {\n  return dispatch => {\n    axios.post('/orders.json', orderData).then(response => {\n      dispatch(purchaseBurgerSuccess(response.data, orderData));\n    }).catch(error => {\n      dispatch(purchaseBurgerFail(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/luistorralbo/Desktop/burger-maker/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurger","dispatch","post","then","response","data","catch"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AACtD,SAAO;AACLC,IAAAA,IAAI,EAAEL,WAAW,CAACM,uBADb;AAELC,IAAAA,OAAO,EAAEJ,EAFJ;AAGLC,IAAAA,SAAS,EAAEA;AAHN,GAAP;AAKD,CANM;AAQP,OAAO,MAAMI,kBAAkB,GAAGC,KAAK,IAAI;AACzC,SAAO;AACLJ,IAAAA,IAAI,EAAEL,WAAW,CAACU,oBADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAME,cAAc,GAAGP,SAAS,IAAI;AACzC,SAAOQ,QAAQ,IAAI;AACjBX,IAAAA,KAAK,CACFY,IADH,CACQ,cADR,EACwBT,SADxB,EAEGU,IAFH,CAEQC,QAAQ,IAAI;AAChBH,MAAAA,QAAQ,CAACV,qBAAqB,CAACa,QAAQ,CAACC,IAAV,EAAgBZ,SAAhB,CAAtB,CAAR;AACD,KAJH,EAKGa,KALH,CAKSR,KAAK,IAAI;AACdG,MAAAA,QAAQ,CAACJ,kBAAkB,CAACC,KAAD,CAAnB,CAAR;AACD,KAPH;AAQD,GATD;AAUD,CAXM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\n\nexport const purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\n\nexport const purchaseBurger = orderData => {\n  return dispatch => {\n    axios\n      .post('/orders.json', orderData)\n      .then(response => {\n        dispatch(purchaseBurgerSuccess(response.data, orderData));\n      })\n      .catch(error => {\n        dispatch(purchaseBurgerFail(error));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}