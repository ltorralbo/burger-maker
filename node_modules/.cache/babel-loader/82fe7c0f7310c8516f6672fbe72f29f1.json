{"ast":null,"code":"import _objectSpread from \"/Users/luistorralbo/Desktop/burger-maker/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/luistorralbo/Desktop/burger-maker/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport whitErrorHandler from '../../hoc/whitErrorHandler/whitErrorHandler';\nimport * as burgerBuilderActions from '../../store/actions/burgerBuilder';\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      purchasing: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      return sum > 0;\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelhandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinued = () => {\n      this.props.history.push('/checkout');\n    };\n  }\n\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.props.ings);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.props.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"No se pueden cargar los ingredientes...\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n\n    if (this.props.ings) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.props.onIngredientAdded,\n        ingredientRemoved: this.props.onIngredientRemoved,\n        disabled: disabledInfo,\n        purchasable: this.updatePurchaseState(this.props.ings),\n        ordered: this.purchaseHandler,\n        price: this.props.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.props.ings,\n        purchaseCancelled: this.purchaseCancelhandler,\n        purchaseContinued: this.purchaseContinued,\n        precio: this.props.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelhandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(burgerBuilderActions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(burgerBuilderActions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(whitErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/luistorralbo/Desktop/burger-maker/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","whitErrorHandler","burgerBuilderActions","BurgerBuilder","state","purchasing","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","purchaseHandler","setState","purchaseCancelhandler","purchaseContinued","props","history","push","componentDidMount","onInitIngredients","render","disabledInfo","ings","key","orderSummary","burger","error","onIngredientAdded","onIngredientRemoved","price","mapStateToProps","burgerBuilder","totalPrice","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient","initIngredients"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport whitErrorHandler from '../../hoc/whitErrorHandler/whitErrorHandler';\nimport * as burgerBuilderActions from '../../store/actions/burgerBuilder';\n\nclass BurgerBuilder extends Component {\n  state = {\n    purchasing: false\n  };\n\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  updatePurchaseState = ingredients => {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n\n    return sum > 0;\n  };\n\n  purchaseHandler = () => {\n    this.setState({ purchasing: true });\n  };\n\n  purchaseCancelhandler = () => {\n    this.setState({ purchasing: false });\n  };\n\n  purchaseContinued = () => {\n    this.props.history.push('/checkout');\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.props.ings\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n\n    let burger = this.props.error ? (\n      <p>No se pueden cargar los ingredientes...</p>\n    ) : (\n      <Spinner />\n    );\n\n    if (this.props.ings) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ings} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            purchasable={this.updatePurchaseState(this.props.ings)}\n            ordered={this.purchaseHandler}\n            price={this.props.price}\n          />\n        </Aux>\n      );\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ings}\n          purchaseCancelled={this.purchaseCancelhandler}\n          purchaseContinued={this.purchaseContinued}\n          precio={this.props.price}\n        />\n      );\n    }\n\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelhandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName =>\n      dispatch(burgerBuilderActions.addIngredient(ingName)),\n    onIngredientRemoved: ingName =>\n      dispatch(burgerBuilderActions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(whitErrorHandler(BurgerBuilder, axios));\n"]},"metadata":{},"sourceType":"module"}